# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events for all branches

 push:
  branches: ["develop","main"]
 pull_request:
  branches: ["develop","main"]


jobs:
 build:
  if: ${{ contains(github.ref, 'dev') ||contains(github.ref, 'release') }}
  runs-on: ubuntu-latest
  steps:
    - run: echo 'MULE CONNECTED APP USER--${{vars.MULE_CONNECT_APP_USER}}'
    - run: echo 'MULE CONNECTED APP PASSWORD--${{vars.MULE_CONNECT_APP_PWD}}'
    - run: echo 'Eventname-- ${{ github.event_name  }}'
    - run: echo 'event-- ${{ github.event  }}'
    - run: echo 'Ref-- ${{ github.ref  }}'
    - run: echo 'RefName-- ${{ github.refname  }}'
    - run: echo 'github head ref-- ${{   github.head_ref }}'
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Build with Maven
      env:
        USERNAME: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
        PASSWORD: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
        KEY: ${{ secrets.decryption_key }}    
      #run: mvn --settings .maven/settings.xml clean install -e -X --file pom.xml
      run: mvn -B  package --file pom.xml --settings .maven/settings.xml -DskipMunitTests

    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
 check_UAT_PROD_Approvers:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: UAT
    steps:
     - name: Check main branch
       run: |
          uat_prod_approvers="${{vars.UAT_PROD_APPROVERS}}"
          array=(${uat_prod_approvers//,/ })
          for i in "${!array[@]}"
          do
          echo "$i=>${array[i]}"
          echo "${{ github.actor }}"
          echo "$i"
          if [[ ${array[i]} == "${{ github.actor }}" ]] 
          then
          echo "Triggering actor is an UAT Approver"
          is_uat_prod_approver="true"
          break
          else
           echo "Triggering actor is not UAT Approver"
           is_uat_prod_approver="false"
           break
          fi
          done
          echo " ${{ vars.is_uat_prod_approver}}"    
 deploy_to_dev:
    environment:
      name: Dev
    #if: ${{ contains(github.ref, 'dev') || !contains(needs.*.result, 'skipped')}}
    if: ${{ (contains(github.ref, 'dev') ) && (github.actor   != github.triggering_actor  ) && (vars.is_uat_prod_approver == 'true')}}
    #if: ${{ !contains(github.event.head_commit.message, '#docs') }}
    needs: Skipped-Job
    runs-on: ubuntu-latest
    steps:  
    - run: echo 'PROVIDER***--${{vars.DEPLOY_PROVIDER}}'
    - run: echo 'REPLICA COUNT***--${{vars.REPLICA_COUNT}}'

    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Deploy to dev
      env:
        CONNECTED_APP_CLIENT_ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
        CONNECTED_APP_CLIENT_SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
        KEY: ${{ secrets.decryption_key }}
      run: |
        mvn deploy --settings .maven/settings.xml  -DskipMunitTests -Dappname_env='dev' -Denvironment=Sandbox -DMULE_ENV=dev -DDEPLOY_TARGET=Cloudhub-US-East-2 -DMULE_PROVIDER=MC -DDEPLOY_MULE_VERSION=4.6.2  -DDEPLOY_VCORE=1 -DDEPLOY_FORWARD_SSL_SESSION=true -DDEPLOY_LAST_MILE_SECURITY=true   
